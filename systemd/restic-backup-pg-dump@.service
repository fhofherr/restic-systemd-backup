# The restic-backup-pg@.service allows to backup one or more postgresql
# databases
#
# The unit is templated, which allows is it to be used with separate named
# configs. After installing the unit the following files need to be created
# in the `${CONFIG_DIR}/<instance-name>`
# directory.
#
#    - `config.env`: containing any environment variables required to configure
#      restic. This file must include the environment variables to configure
#      the restic repository location and the password for it.
#      See: https://restic.readthedocs.io/en/stable/040_backup.html#environment-variables
#
#    - `pg_dbs`: file containing the names of the databases to backup. Each
#      database name must be on a separate line with no leading or trailing
#      whitespace (except for the newline).

[Unit]
Description=Backup a postgresql database using the configuration in ${CONFIG_DIR}/%I

ConditionFileNotEmpty=${CONFIG_DIR}/%I/config.env
ConditionFileNotEmpty=${CONFIG_DIR}/%I/pg_dbs
ConditionFileIsExecutable=${REPO_DIR}/bash/check-snapshots

OnFailure=restic-backup-failed@%n

[Service]
Type=oneshot
KillMode=mixed
User=${RESTIC_USER}
Group=${RESTIC_GROUP}
EnvironmentFile=${CONFIG_DIR}/%I/config.env

# Use the home directory of the restic user configured above.
WorkingDirectory=~

ExecCondition=${REPO_DIR}/bash/check-snapshots
ExecStart=${REPO_DIR}/bash/pg-dump ${CONFIG_DIR}/%I

[Install]
WantedBy=multi-user.target
